% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/custom_flist.R, R/flist.R
\name{custom_flist}
\alias{custom_flist}
\alias{flist_}
\title{Convert a list of Ids to a new list of a possibly different type}
\usage{
custom_flist(savedlist, custom, from, to, id_type, where = NULL, having = NULL)

flist_(
  savedlist,
  table,
  from,
  to,
  id_type,
  where = NULL,
  having = NULL,
  schema
)
}
\arguments{
\item{savedlist}{a listbuilder list or report}

\item{from}{the origin ID field}

\item{to}{the destination ID field}

\item{id_type}{the id_type of the new listbuilder object}

\item{where}{any pre-aggregation conditions (lazy_dots)}

\item{having}{any post-aggregation conditions (lazy_dots)}

\item{table}{the table within which the flist will happen}

\item{schema}{"CDW" by default, no need to change it}

\item{env}{enviornment for evaluating table, from, to, and ...}
}
\description{
A list of allocations can be converted to a list of entities, via the
question "who gave to allocations in this list?" A list of entities can be
converted to a new list of entities via the question "Who are the children of
these entities?" And so on. \code{flist} is the general-purpose tool to make
these conversions.
}
\details{
To use flist, you have to specify the origin and destination id fields, as
well as the "context" that defines the transformation. The "context" includes
the CDW table that contains both id fields, and any conditions. Example
context: \code{table = d_bio_relationship_mv},
condition = \code{relation_type_code \%in\% c("SF", "SM", "DF", "DM"}.
That would describe an output of IDs that are parents of the original ID list.
}
